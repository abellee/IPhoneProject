// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_UserAuction.pb.h"

@implementation PpUserAuctionRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpUserAuctionRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_UserAuction ()
@property int32_t auctionId;
@property int32_t uid;
@property int32_t actionId;
@property int32_t itemId;
@property int32_t itemNum;
@property int32_t invalidTime;
@property int32_t createTime;
@property int32_t version;
@end

@implementation PP_UserAuction

- (BOOL) hasAuctionId {
  return !!hasAuctionId_;
}
- (void) setHasAuctionId:(BOOL) value_ {
  hasAuctionId_ = !!value_;
}
@synthesize auctionId;
- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) value_ {
  hasUid_ = !!value_;
}
@synthesize uid;
- (BOOL) hasActionId {
  return !!hasActionId_;
}
- (void) setHasActionId:(BOOL) value_ {
  hasActionId_ = !!value_;
}
@synthesize actionId;
- (BOOL) hasItemId {
  return !!hasItemId_;
}
- (void) setHasItemId:(BOOL) value_ {
  hasItemId_ = !!value_;
}
@synthesize itemId;
- (BOOL) hasItemNum {
  return !!hasItemNum_;
}
- (void) setHasItemNum:(BOOL) value_ {
  hasItemNum_ = !!value_;
}
@synthesize itemNum;
- (BOOL) hasInvalidTime {
  return !!hasInvalidTime_;
}
- (void) setHasInvalidTime:(BOOL) value_ {
  hasInvalidTime_ = !!value_;
}
@synthesize invalidTime;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value_ {
  hasCreateTime_ = !!value_;
}
@synthesize createTime;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.auctionId = 0;
    self.uid = 0;
    self.actionId = 0;
    self.itemId = 0;
    self.itemNum = 0;
    self.invalidTime = 0;
    self.createTime = 0;
    self.version = 0;
  }
  return self;
}
static PP_UserAuction* defaultPP_UserAuctionInstance = nil;
+ (void) initialize {
  if (self == [PP_UserAuction class]) {
    defaultPP_UserAuctionInstance = [[PP_UserAuction alloc] init];
  }
}
+ (PP_UserAuction*) defaultInstance {
  return defaultPP_UserAuctionInstance;
}
- (PP_UserAuction*) defaultInstance {
  return defaultPP_UserAuctionInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAuctionId) {
    [output writeInt32:1 value:self.auctionId];
  }
  if (self.hasUid) {
    [output writeInt32:2 value:self.uid];
  }
  if (self.hasActionId) {
    [output writeInt32:3 value:self.actionId];
  }
  if (self.hasItemId) {
    [output writeInt32:4 value:self.itemId];
  }
  if (self.hasItemNum) {
    [output writeInt32:5 value:self.itemNum];
  }
  if (self.hasInvalidTime) {
    [output writeInt32:6 value:self.invalidTime];
  }
  if (self.hasCreateTime) {
    [output writeInt32:7 value:self.createTime];
  }
  if (self.hasVersion) {
    [output writeInt32:8 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAuctionId) {
    size_ += computeInt32Size(1, self.auctionId);
  }
  if (self.hasUid) {
    size_ += computeInt32Size(2, self.uid);
  }
  if (self.hasActionId) {
    size_ += computeInt32Size(3, self.actionId);
  }
  if (self.hasItemId) {
    size_ += computeInt32Size(4, self.itemId);
  }
  if (self.hasItemNum) {
    size_ += computeInt32Size(5, self.itemNum);
  }
  if (self.hasInvalidTime) {
    size_ += computeInt32Size(6, self.invalidTime);
  }
  if (self.hasCreateTime) {
    size_ += computeInt32Size(7, self.createTime);
  }
  if (self.hasVersion) {
    size_ += computeInt32Size(8, self.version);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_UserAuction*) parseFromData:(NSData*) data {
  return (PP_UserAuction*)[[[PP_UserAuction builder] mergeFromData:data] build];
}
+ (PP_UserAuction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_UserAuction*)[[[PP_UserAuction builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_UserAuction*) parseFromInputStream:(NSInputStream*) input {
  return (PP_UserAuction*)[[[PP_UserAuction builder] mergeFromInputStream:input] build];
}
+ (PP_UserAuction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_UserAuction*)[[[PP_UserAuction builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_UserAuction*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_UserAuction*)[[[PP_UserAuction builder] mergeFromCodedInputStream:input] build];
}
+ (PP_UserAuction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_UserAuction*)[[[PP_UserAuction builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_UserAuction_Builder*) builder {
  return [[[PP_UserAuction_Builder alloc] init] autorelease];
}
+ (PP_UserAuction_Builder*) builderWithPrototype:(PP_UserAuction*) prototype {
  return [[PP_UserAuction builder] mergeFrom:prototype];
}
- (PP_UserAuction_Builder*) builder {
  return [PP_UserAuction builder];
}
- (PP_UserAuction_Builder*) toBuilder {
  return [PP_UserAuction builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAuctionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"auctionId", [NSNumber numberWithInt:self.auctionId]];
  }
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithInt:self.uid]];
  }
  if (self.hasActionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"actionId", [NSNumber numberWithInt:self.actionId]];
  }
  if (self.hasItemId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"itemId", [NSNumber numberWithInt:self.itemId]];
  }
  if (self.hasItemNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"itemNum", [NSNumber numberWithInt:self.itemNum]];
  }
  if (self.hasInvalidTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"invalidTime", [NSNumber numberWithInt:self.invalidTime]];
  }
  if (self.hasCreateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createTime", [NSNumber numberWithInt:self.createTime]];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInt:self.version]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_UserAuction class]]) {
    return NO;
  }
  PP_UserAuction *otherMessage = other;
  return
      self.hasAuctionId == otherMessage.hasAuctionId &&
      (!self.hasAuctionId || self.auctionId == otherMessage.auctionId) &&
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasActionId == otherMessage.hasActionId &&
      (!self.hasActionId || self.actionId == otherMessage.actionId) &&
      self.hasItemId == otherMessage.hasItemId &&
      (!self.hasItemId || self.itemId == otherMessage.itemId) &&
      self.hasItemNum == otherMessage.hasItemNum &&
      (!self.hasItemNum || self.itemNum == otherMessage.itemNum) &&
      self.hasInvalidTime == otherMessage.hasInvalidTime &&
      (!self.hasInvalidTime || self.invalidTime == otherMessage.invalidTime) &&
      self.hasCreateTime == otherMessage.hasCreateTime &&
      (!self.hasCreateTime || self.createTime == otherMessage.createTime) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAuctionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.auctionId] hash];
  }
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.uid] hash];
  }
  if (self.hasActionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.actionId] hash];
  }
  if (self.hasItemId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.itemId] hash];
  }
  if (self.hasItemNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.itemNum] hash];
  }
  if (self.hasInvalidTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.invalidTime] hash];
  }
  if (self.hasCreateTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.createTime] hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.version] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_UserAuction_Builder()
@property (retain) PP_UserAuction* result;
@end

@implementation PP_UserAuction_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_UserAuction alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_UserAuction_Builder*) clear {
  self.result = [[[PP_UserAuction alloc] init] autorelease];
  return self;
}
- (PP_UserAuction_Builder*) clone {
  return [PP_UserAuction builderWithPrototype:result];
}
- (PP_UserAuction*) defaultInstance {
  return [PP_UserAuction defaultInstance];
}
- (PP_UserAuction*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_UserAuction*) buildPartial {
  PP_UserAuction* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_UserAuction_Builder*) mergeFrom:(PP_UserAuction*) other {
  if (other == [PP_UserAuction defaultInstance]) {
    return self;
  }
  if (other.hasAuctionId) {
    [self setAuctionId:other.auctionId];
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasActionId) {
    [self setActionId:other.actionId];
  }
  if (other.hasItemId) {
    [self setItemId:other.itemId];
  }
  if (other.hasItemNum) {
    [self setItemNum:other.itemNum];
  }
  if (other.hasInvalidTime) {
    [self setInvalidTime:other.invalidTime];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_UserAuction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_UserAuction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAuctionId:[input readInt32]];
        break;
      }
      case 16: {
        [self setUid:[input readInt32]];
        break;
      }
      case 24: {
        [self setActionId:[input readInt32]];
        break;
      }
      case 32: {
        [self setItemId:[input readInt32]];
        break;
      }
      case 40: {
        [self setItemNum:[input readInt32]];
        break;
      }
      case 48: {
        [self setInvalidTime:[input readInt32]];
        break;
      }
      case 56: {
        [self setCreateTime:[input readInt32]];
        break;
      }
      case 64: {
        [self setVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAuctionId {
  return result.hasAuctionId;
}
- (int32_t) auctionId {
  return result.auctionId;
}
- (PP_UserAuction_Builder*) setAuctionId:(int32_t) value {
  result.hasAuctionId = YES;
  result.auctionId = value;
  return self;
}
- (PP_UserAuction_Builder*) clearAuctionId {
  result.hasAuctionId = NO;
  result.auctionId = 0;
  return self;
}
- (BOOL) hasUid {
  return result.hasUid;
}
- (int32_t) uid {
  return result.uid;
}
- (PP_UserAuction_Builder*) setUid:(int32_t) value {
  result.hasUid = YES;
  result.uid = value;
  return self;
}
- (PP_UserAuction_Builder*) clearUid {
  result.hasUid = NO;
  result.uid = 0;
  return self;
}
- (BOOL) hasActionId {
  return result.hasActionId;
}
- (int32_t) actionId {
  return result.actionId;
}
- (PP_UserAuction_Builder*) setActionId:(int32_t) value {
  result.hasActionId = YES;
  result.actionId = value;
  return self;
}
- (PP_UserAuction_Builder*) clearActionId {
  result.hasActionId = NO;
  result.actionId = 0;
  return self;
}
- (BOOL) hasItemId {
  return result.hasItemId;
}
- (int32_t) itemId {
  return result.itemId;
}
- (PP_UserAuction_Builder*) setItemId:(int32_t) value {
  result.hasItemId = YES;
  result.itemId = value;
  return self;
}
- (PP_UserAuction_Builder*) clearItemId {
  result.hasItemId = NO;
  result.itemId = 0;
  return self;
}
- (BOOL) hasItemNum {
  return result.hasItemNum;
}
- (int32_t) itemNum {
  return result.itemNum;
}
- (PP_UserAuction_Builder*) setItemNum:(int32_t) value {
  result.hasItemNum = YES;
  result.itemNum = value;
  return self;
}
- (PP_UserAuction_Builder*) clearItemNum {
  result.hasItemNum = NO;
  result.itemNum = 0;
  return self;
}
- (BOOL) hasInvalidTime {
  return result.hasInvalidTime;
}
- (int32_t) invalidTime {
  return result.invalidTime;
}
- (PP_UserAuction_Builder*) setInvalidTime:(int32_t) value {
  result.hasInvalidTime = YES;
  result.invalidTime = value;
  return self;
}
- (PP_UserAuction_Builder*) clearInvalidTime {
  result.hasInvalidTime = NO;
  result.invalidTime = 0;
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (int32_t) createTime {
  return result.createTime;
}
- (PP_UserAuction_Builder*) setCreateTime:(int32_t) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (PP_UserAuction_Builder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = 0;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (PP_UserAuction_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (PP_UserAuction_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
@end

