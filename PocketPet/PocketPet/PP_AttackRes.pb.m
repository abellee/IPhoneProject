// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_AttackRes.pb.h"

@implementation PpAttackResRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpAttackResRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [PpGameControlRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_AttackRes ()
@property (retain) PP_GameControl* gameControl;
@end

@implementation PP_AttackRes

- (BOOL) hasGameControl {
  return !!hasGameControl_;
}
- (void) setHasGameControl:(BOOL) value_ {
  hasGameControl_ = !!value_;
}
@synthesize gameControl;
- (void) dealloc {
  self.gameControl = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.gameControl = [PP_GameControl defaultInstance];
  }
  return self;
}
static PP_AttackRes* defaultPP_AttackResInstance = nil;
+ (void) initialize {
  if (self == [PP_AttackRes class]) {
    defaultPP_AttackResInstance = [[PP_AttackRes alloc] init];
  }
}
+ (PP_AttackRes*) defaultInstance {
  return defaultPP_AttackResInstance;
}
- (PP_AttackRes*) defaultInstance {
  return defaultPP_AttackResInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGameControl) {
    [output writeMessage:4 value:self.gameControl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGameControl) {
    size_ += computeMessageSize(4, self.gameControl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_AttackRes*) parseFromData:(NSData*) data {
  return (PP_AttackRes*)[[[PP_AttackRes builder] mergeFromData:data] build];
}
+ (PP_AttackRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_AttackRes*)[[[PP_AttackRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_AttackRes*) parseFromInputStream:(NSInputStream*) input {
  return (PP_AttackRes*)[[[PP_AttackRes builder] mergeFromInputStream:input] build];
}
+ (PP_AttackRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_AttackRes*)[[[PP_AttackRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_AttackRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_AttackRes*)[[[PP_AttackRes builder] mergeFromCodedInputStream:input] build];
}
+ (PP_AttackRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_AttackRes*)[[[PP_AttackRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_AttackRes_Builder*) builder {
  return [[[PP_AttackRes_Builder alloc] init] autorelease];
}
+ (PP_AttackRes_Builder*) builderWithPrototype:(PP_AttackRes*) prototype {
  return [[PP_AttackRes builder] mergeFrom:prototype];
}
- (PP_AttackRes_Builder*) builder {
  return [PP_AttackRes builder];
}
- (PP_AttackRes_Builder*) toBuilder {
  return [PP_AttackRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGameControl) {
    [output appendFormat:@"%@%@ {\n", indent, @"gameControl"];
    [self.gameControl writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_AttackRes class]]) {
    return NO;
  }
  PP_AttackRes *otherMessage = other;
  return
      self.hasGameControl == otherMessage.hasGameControl &&
      (!self.hasGameControl || [self.gameControl isEqual:otherMessage.gameControl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasGameControl) {
    hashCode = hashCode * 31 + [self.gameControl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_AttackRes_Builder()
@property (retain) PP_AttackRes* result;
@end

@implementation PP_AttackRes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_AttackRes alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_AttackRes_Builder*) clear {
  self.result = [[[PP_AttackRes alloc] init] autorelease];
  return self;
}
- (PP_AttackRes_Builder*) clone {
  return [PP_AttackRes builderWithPrototype:result];
}
- (PP_AttackRes*) defaultInstance {
  return [PP_AttackRes defaultInstance];
}
- (PP_AttackRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_AttackRes*) buildPartial {
  PP_AttackRes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_AttackRes_Builder*) mergeFrom:(PP_AttackRes*) other {
  if (other == [PP_AttackRes defaultInstance]) {
    return self;
  }
  if (other.hasGameControl) {
    [self mergeGameControl:other.gameControl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_AttackRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_AttackRes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 34: {
        PP_GameControl_Builder* subBuilder = [PP_GameControl builder];
        if (self.hasGameControl) {
          [subBuilder mergeFrom:self.gameControl];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGameControl:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGameControl {
  return result.hasGameControl;
}
- (PP_GameControl*) gameControl {
  return result.gameControl;
}
- (PP_AttackRes_Builder*) setGameControl:(PP_GameControl*) value {
  result.hasGameControl = YES;
  result.gameControl = value;
  return self;
}
- (PP_AttackRes_Builder*) setGameControlBuilder:(PP_GameControl_Builder*) builderForValue {
  return [self setGameControl:[builderForValue build]];
}
- (PP_AttackRes_Builder*) mergeGameControl:(PP_GameControl*) value {
  if (result.hasGameControl &&
      result.gameControl != [PP_GameControl defaultInstance]) {
    result.gameControl =
      [[[PP_GameControl builderWithPrototype:result.gameControl] mergeFrom:value] buildPartial];
  } else {
    result.gameControl = value;
  }
  result.hasGameControl = YES;
  return self;
}
- (PP_AttackRes_Builder*) clearGameControl {
  result.hasGameControl = NO;
  result.gameControl = [PP_GameControl defaultInstance];
  return self;
}
@end

