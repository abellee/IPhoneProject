// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_Account.pb.h"

@implementation PpAccountRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpAccountRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_Account ()
@property (retain) NSString* username;
@property (retain) NSString* password;
@end

@implementation PP_Account

- (BOOL) hasUsername {
  return !!hasUsername_;
}
- (void) setHasUsername:(BOOL) value_ {
  hasUsername_ = !!value_;
}
@synthesize username;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) value_ {
  hasPassword_ = !!value_;
}
@synthesize password;
- (void) dealloc {
  self.username = nil;
  self.password = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.username = @"";
    self.password = @"";
  }
  return self;
}
static PP_Account* defaultPP_AccountInstance = nil;
+ (void) initialize {
  if (self == [PP_Account class]) {
    defaultPP_AccountInstance = [[PP_Account alloc] init];
  }
}
+ (PP_Account*) defaultInstance {
  return defaultPP_AccountInstance;
}
- (PP_Account*) defaultInstance {
  return defaultPP_AccountInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUsername) {
    return NO;
  }
  if (!self.hasPassword) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUsername) {
    [output writeString:1 value:self.username];
  }
  if (self.hasPassword) {
    [output writeString:2 value:self.password];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUsername) {
    size_ += computeStringSize(1, self.username);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(2, self.password);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_Account*) parseFromData:(NSData*) data {
  return (PP_Account*)[[[PP_Account builder] mergeFromData:data] build];
}
+ (PP_Account*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Account*)[[[PP_Account builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_Account*) parseFromInputStream:(NSInputStream*) input {
  return (PP_Account*)[[[PP_Account builder] mergeFromInputStream:input] build];
}
+ (PP_Account*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Account*)[[[PP_Account builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_Account*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_Account*)[[[PP_Account builder] mergeFromCodedInputStream:input] build];
}
+ (PP_Account*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Account*)[[[PP_Account builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_Account_Builder*) builder {
  return [[[PP_Account_Builder alloc] init] autorelease];
}
+ (PP_Account_Builder*) builderWithPrototype:(PP_Account*) prototype {
  return [[PP_Account builder] mergeFrom:prototype];
}
- (PP_Account_Builder*) builder {
  return [PP_Account builder];
}
- (PP_Account_Builder*) toBuilder {
  return [PP_Account builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUsername) {
    [output appendFormat:@"%@%@: %@\n", indent, @"username", self.username];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_Account class]]) {
    return NO;
  }
  PP_Account *otherMessage = other;
  return
      self.hasUsername == otherMessage.hasUsername &&
      (!self.hasUsername || [self.username isEqual:otherMessage.username]) &&
      self.hasPassword == otherMessage.hasPassword &&
      (!self.hasPassword || [self.password isEqual:otherMessage.password]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasUsername) {
    hashCode = hashCode * 31 + [self.username hash];
  }
  if (self.hasPassword) {
    hashCode = hashCode * 31 + [self.password hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_Account_Builder()
@property (retain) PP_Account* result;
@end

@implementation PP_Account_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_Account alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_Account_Builder*) clear {
  self.result = [[[PP_Account alloc] init] autorelease];
  return self;
}
- (PP_Account_Builder*) clone {
  return [PP_Account builderWithPrototype:result];
}
- (PP_Account*) defaultInstance {
  return [PP_Account defaultInstance];
}
- (PP_Account*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_Account*) buildPartial {
  PP_Account* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_Account_Builder*) mergeFrom:(PP_Account*) other {
  if (other == [PP_Account defaultInstance]) {
    return self;
  }
  if (other.hasUsername) {
    [self setUsername:other.username];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_Account_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_Account_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUsername:[input readString]];
        break;
      }
      case 18: {
        [self setPassword:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUsername {
  return result.hasUsername;
}
- (NSString*) username {
  return result.username;
}
- (PP_Account_Builder*) setUsername:(NSString*) value {
  result.hasUsername = YES;
  result.username = value;
  return self;
}
- (PP_Account_Builder*) clearUsername {
  result.hasUsername = NO;
  result.username = @"";
  return self;
}
- (BOOL) hasPassword {
  return result.hasPassword;
}
- (NSString*) password {
  return result.password;
}
- (PP_Account_Builder*) setPassword:(NSString*) value {
  result.hasPassword = YES;
  result.password = value;
  return self;
}
- (PP_Account_Builder*) clearPassword {
  result.hasPassword = NO;
  result.password = @"";
  return self;
}
@end

