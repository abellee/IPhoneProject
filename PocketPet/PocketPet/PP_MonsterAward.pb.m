// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_MonsterAward.pb.h"

@implementation PpMonsterAwardRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpMonsterAwardRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [PpMonsterAwardDataRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_MonsterAward ()
@property (retain) PBAppendableArray * awardDataListArray;
@property int32_t monsterId;
@end

@implementation PP_MonsterAward

@synthesize awardDataListArray;
@dynamic awardDataList;
- (BOOL) hasMonsterId {
  return !!hasMonsterId_;
}
- (void) setHasMonsterId:(BOOL) value_ {
  hasMonsterId_ = !!value_;
}
@synthesize monsterId;
- (void) dealloc {
  self.awardDataListArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.monsterId = 0;
  }
  return self;
}
static PP_MonsterAward* defaultPP_MonsterAwardInstance = nil;
+ (void) initialize {
  if (self == [PP_MonsterAward class]) {
    defaultPP_MonsterAwardInstance = [[PP_MonsterAward alloc] init];
  }
}
+ (PP_MonsterAward*) defaultInstance {
  return defaultPP_MonsterAwardInstance;
}
- (PP_MonsterAward*) defaultInstance {
  return defaultPP_MonsterAwardInstance;
}
- (PBArray *)awardDataList {
  return awardDataListArray;
}
- (PP_MonsterAwardData*)awardDataListAtIndex:(NSUInteger)index {
  return [awardDataListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (PP_MonsterAwardData *element in self.awardDataListArray) {
    [output writeMessage:1 value:element];
  }
  if (self.hasMonsterId) {
    [output writeInt32:2 value:self.monsterId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (PP_MonsterAwardData *element in self.awardDataListArray) {
    size_ += computeMessageSize(1, element);
  }
  if (self.hasMonsterId) {
    size_ += computeInt32Size(2, self.monsterId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_MonsterAward*) parseFromData:(NSData*) data {
  return (PP_MonsterAward*)[[[PP_MonsterAward builder] mergeFromData:data] build];
}
+ (PP_MonsterAward*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_MonsterAward*)[[[PP_MonsterAward builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_MonsterAward*) parseFromInputStream:(NSInputStream*) input {
  return (PP_MonsterAward*)[[[PP_MonsterAward builder] mergeFromInputStream:input] build];
}
+ (PP_MonsterAward*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_MonsterAward*)[[[PP_MonsterAward builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_MonsterAward*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_MonsterAward*)[[[PP_MonsterAward builder] mergeFromCodedInputStream:input] build];
}
+ (PP_MonsterAward*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_MonsterAward*)[[[PP_MonsterAward builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_MonsterAward_Builder*) builder {
  return [[[PP_MonsterAward_Builder alloc] init] autorelease];
}
+ (PP_MonsterAward_Builder*) builderWithPrototype:(PP_MonsterAward*) prototype {
  return [[PP_MonsterAward builder] mergeFrom:prototype];
}
- (PP_MonsterAward_Builder*) builder {
  return [PP_MonsterAward builder];
}
- (PP_MonsterAward_Builder*) toBuilder {
  return [PP_MonsterAward builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (PP_MonsterAwardData* element in self.awardDataListArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"awardDataList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMonsterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"monsterId", [NSNumber numberWithInt:self.monsterId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_MonsterAward class]]) {
    return NO;
  }
  PP_MonsterAward *otherMessage = other;
  return
      [self.awardDataListArray isEqualToArray:otherMessage.awardDataListArray] &&
      self.hasMonsterId == otherMessage.hasMonsterId &&
      (!self.hasMonsterId || self.monsterId == otherMessage.monsterId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (PP_MonsterAwardData* element in self.awardDataListArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasMonsterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.monsterId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_MonsterAward_Builder()
@property (retain) PP_MonsterAward* result;
@end

@implementation PP_MonsterAward_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_MonsterAward alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_MonsterAward_Builder*) clear {
  self.result = [[[PP_MonsterAward alloc] init] autorelease];
  return self;
}
- (PP_MonsterAward_Builder*) clone {
  return [PP_MonsterAward builderWithPrototype:result];
}
- (PP_MonsterAward*) defaultInstance {
  return [PP_MonsterAward defaultInstance];
}
- (PP_MonsterAward*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_MonsterAward*) buildPartial {
  PP_MonsterAward* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_MonsterAward_Builder*) mergeFrom:(PP_MonsterAward*) other {
  if (other == [PP_MonsterAward defaultInstance]) {
    return self;
  }
  if (other.awardDataListArray.count > 0) {
    if (result.awardDataListArray == nil) {
      result.awardDataListArray = [[other.awardDataListArray copyWithZone:[other.awardDataListArray zone]] autorelease];
    } else {
      [result.awardDataListArray appendArray:other.awardDataListArray];
    }
  }
  if (other.hasMonsterId) {
    [self setMonsterId:other.monsterId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_MonsterAward_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_MonsterAward_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PP_MonsterAwardData_Builder* subBuilder = [PP_MonsterAwardData builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAwardDataList:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setMonsterId:[input readInt32]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)awardDataList {
  return result.awardDataListArray;
}
- (PP_MonsterAwardData*)awardDataListAtIndex:(NSUInteger)index {
  return [result awardDataListAtIndex:index];
}
- (PP_MonsterAward_Builder *)addAwardDataList:(PP_MonsterAwardData*)value {
  if (result.awardDataListArray == nil) {
    result.awardDataListArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.awardDataListArray addObject:value];
  return self;
}
- (PP_MonsterAward_Builder *)setAwardDataListArray:(NSArray *)array {
  result.awardDataListArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PP_MonsterAward_Builder *)setAwardDataListValues:(const PP_MonsterAwardData* *)values count:(NSUInteger)count {
  result.awardDataListArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PP_MonsterAward_Builder *)clearAwardDataList {
  result.awardDataListArray = nil;
  return self;
}
- (BOOL) hasMonsterId {
  return result.hasMonsterId;
}
- (int32_t) monsterId {
  return result.monsterId;
}
- (PP_MonsterAward_Builder*) setMonsterId:(int32_t) value {
  result.hasMonsterId = YES;
  result.monsterId = value;
  return self;
}
- (PP_MonsterAward_Builder*) clearMonsterId {
  result.hasMonsterId = NO;
  result.monsterId = 0;
  return self;
}
@end

