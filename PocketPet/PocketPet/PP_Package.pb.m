// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_Package.pb.h"

@implementation PpPackageRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpPackageRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [PpBodyRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_Package ()
@property uint32_t length;
@property (retain) PP_Body* body;
@end

@implementation PP_Package

- (BOOL) hasLength {
  return !!hasLength_;
}
- (void) setHasLength:(BOOL) value_ {
  hasLength_ = !!value_;
}
@synthesize length;
- (BOOL) hasBody {
  return !!hasBody_;
}
- (void) setHasBody:(BOOL) value_ {
  hasBody_ = !!value_;
}
@synthesize body;
- (void) dealloc {
  self.body = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.length = 0;
    self.body = [PP_Body defaultInstance];
  }
  return self;
}
static PP_Package* defaultPP_PackageInstance = nil;
+ (void) initialize {
  if (self == [PP_Package class]) {
    defaultPP_PackageInstance = [[PP_Package alloc] init];
  }
}
+ (PP_Package*) defaultInstance {
  return defaultPP_PackageInstance;
}
- (PP_Package*) defaultInstance {
  return defaultPP_PackageInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLength) {
    [output writeFixed32:1 value:self.length];
  }
  if (self.hasBody) {
    [output writeMessage:2 value:self.body];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLength) {
    size_ += computeFixed32Size(1, self.length);
  }
  if (self.hasBody) {
    size_ += computeMessageSize(2, self.body);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_Package*) parseFromData:(NSData*) data {
  return (PP_Package*)[[[PP_Package builder] mergeFromData:data] build];
}
+ (PP_Package*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Package*)[[[PP_Package builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_Package*) parseFromInputStream:(NSInputStream*) input {
  return (PP_Package*)[[[PP_Package builder] mergeFromInputStream:input] build];
}
+ (PP_Package*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Package*)[[[PP_Package builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_Package*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_Package*)[[[PP_Package builder] mergeFromCodedInputStream:input] build];
}
+ (PP_Package*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Package*)[[[PP_Package builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_Package_Builder*) builder {
  return [[[PP_Package_Builder alloc] init] autorelease];
}
+ (PP_Package_Builder*) builderWithPrototype:(PP_Package*) prototype {
  return [[PP_Package builder] mergeFrom:prototype];
}
- (PP_Package_Builder*) builder {
  return [PP_Package builder];
}
- (PP_Package_Builder*) toBuilder {
  return [PP_Package builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLength) {
    [output appendFormat:@"%@%@: %@\n", indent, @"length", [NSNumber numberWithInt:self.length]];
  }
  if (self.hasBody) {
    [output appendFormat:@"%@%@ {\n", indent, @"body"];
    [self.body writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_Package class]]) {
    return NO;
  }
  PP_Package *otherMessage = other;
  return
      self.hasLength == otherMessage.hasLength &&
      (!self.hasLength || self.length == otherMessage.length) &&
      self.hasBody == otherMessage.hasBody &&
      (!self.hasBody || [self.body isEqual:otherMessage.body]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasLength) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.length] hash];
  }
  if (self.hasBody) {
    hashCode = hashCode * 31 + [self.body hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_Package_Builder()
@property (retain) PP_Package* result;
@end

@implementation PP_Package_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_Package alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_Package_Builder*) clear {
  self.result = [[[PP_Package alloc] init] autorelease];
  return self;
}
- (PP_Package_Builder*) clone {
  return [PP_Package builderWithPrototype:result];
}
- (PP_Package*) defaultInstance {
  return [PP_Package defaultInstance];
}
- (PP_Package*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_Package*) buildPartial {
  PP_Package* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_Package_Builder*) mergeFrom:(PP_Package*) other {
  if (other == [PP_Package defaultInstance]) {
    return self;
  }
  if (other.hasLength) {
    [self setLength:other.length];
  }
  if (other.hasBody) {
    [self mergeBody:other.body];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_Package_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_Package_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 13: {
        [self setLength:[input readFixed32]];
        break;
      }
      case 18: {
        PP_Body_Builder* subBuilder = [PP_Body builder];
        if (self.hasBody) {
          [subBuilder mergeFrom:self.body];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBody:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasLength {
  return result.hasLength;
}
- (uint32_t) length {
  return result.length;
}
- (PP_Package_Builder*) setLength:(uint32_t) value {
  result.hasLength = YES;
  result.length = value;
  return self;
}
- (PP_Package_Builder*) clearLength {
  result.hasLength = NO;
  result.length = 0;
  return self;
}
- (BOOL) hasBody {
  return result.hasBody;
}
- (PP_Body*) body {
  return result.body;
}
- (PP_Package_Builder*) setBody:(PP_Body*) value {
  result.hasBody = YES;
  result.body = value;
  return self;
}
- (PP_Package_Builder*) setBodyBuilder:(PP_Body_Builder*) builderForValue {
  return [self setBody:[builderForValue build]];
}
- (PP_Package_Builder*) mergeBody:(PP_Body*) value {
  if (result.hasBody &&
      result.body != [PP_Body defaultInstance]) {
    result.body =
      [[[PP_Body builderWithPrototype:result.body] mergeFrom:value] buildPartial];
  } else {
    result.body = value;
  }
  result.hasBody = YES;
  return self;
}
- (PP_Package_Builder*) clearBody {
  result.hasBody = NO;
  result.body = [PP_Body defaultInstance];
  return self;
}
@end

