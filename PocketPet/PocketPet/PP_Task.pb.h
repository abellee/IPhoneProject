// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

#import "PP_Task_Require.pb.h"
#import "PP_Task_Award.pb.h"

@class PP_Task;
@class PP_Task_Award;
@class PP_Task_Award_Builder;
@class PP_Task_Builder;
@class PP_Task_Require;
@class PP_Task_Require_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif


@interface PpTaskRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PP_Task : PBGeneratedMessage {
@private
  BOOL hasUid_:1;
  BOOL hasTaskId_:1;
  BOOL hasTaskType_:1;
  BOOL hasReqLevel_:1;
  BOOL hasReqPlayerNum_:1;
  BOOL hasDuration_:1;
  BOOL hasActionId_:1;
  BOOL hasNextTaskId_:1;
  BOOL hasInvalidTime_:1;
  BOOL hasVersion_:1;
  BOOL hasTaskName_:1;
  BOOL hasTaskDes_:1;
  int32_t uid;
  int32_t taskId;
  int32_t taskType;
  int32_t reqLevel;
  int32_t reqPlayerNum;
  int32_t duration;
  int32_t actionId;
  int32_t nextTaskId;
  int32_t invalidTime;
  int32_t version;
  NSString* taskName;
  NSString* taskDes;
  PBAppendableArray * requireListArray;
  PBAppendableArray * taskAwardArray;
}
- (BOOL) hasUid;
- (BOOL) hasTaskId;
- (BOOL) hasTaskName;
- (BOOL) hasTaskDes;
- (BOOL) hasTaskType;
- (BOOL) hasReqLevel;
- (BOOL) hasReqPlayerNum;
- (BOOL) hasDuration;
- (BOOL) hasActionId;
- (BOOL) hasNextTaskId;
- (BOOL) hasInvalidTime;
- (BOOL) hasVersion;
@property (readonly) int32_t uid;
@property (readonly) int32_t taskId;
@property (readonly, retain) NSString* taskName;
@property (readonly, retain) NSString* taskDes;
@property (readonly) int32_t taskType;
@property (readonly) int32_t reqLevel;
@property (readonly) int32_t reqPlayerNum;
@property (readonly, retain) PBArray * requireList;
@property (readonly) int32_t duration;
@property (readonly) int32_t actionId;
@property (readonly) int32_t nextTaskId;
@property (readonly) int32_t invalidTime;
@property (readonly) int32_t version;
@property (readonly, retain) PBArray * taskAward;
- (PP_Task_Require*)requireListAtIndex:(NSUInteger)index;
- (PP_Task_Award*)taskAwardAtIndex:(NSUInteger)index;

+ (PP_Task*) defaultInstance;
- (PP_Task*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PP_Task_Builder*) builder;
+ (PP_Task_Builder*) builder;
+ (PP_Task_Builder*) builderWithPrototype:(PP_Task*) prototype;
- (PP_Task_Builder*) toBuilder;

+ (PP_Task*) parseFromData:(NSData*) data;
+ (PP_Task*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PP_Task*) parseFromInputStream:(NSInputStream*) input;
+ (PP_Task*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PP_Task*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PP_Task*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PP_Task_Builder : PBGeneratedMessage_Builder {
@private
  PP_Task* result;
}

- (PP_Task*) defaultInstance;

- (PP_Task_Builder*) clear;
- (PP_Task_Builder*) clone;

- (PP_Task*) build;
- (PP_Task*) buildPartial;

- (PP_Task_Builder*) mergeFrom:(PP_Task*) other;
- (PP_Task_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PP_Task_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUid;
- (int32_t) uid;
- (PP_Task_Builder*) setUid:(int32_t) value;
- (PP_Task_Builder*) clearUid;

- (BOOL) hasTaskId;
- (int32_t) taskId;
- (PP_Task_Builder*) setTaskId:(int32_t) value;
- (PP_Task_Builder*) clearTaskId;

- (BOOL) hasTaskName;
- (NSString*) taskName;
- (PP_Task_Builder*) setTaskName:(NSString*) value;
- (PP_Task_Builder*) clearTaskName;

- (BOOL) hasTaskDes;
- (NSString*) taskDes;
- (PP_Task_Builder*) setTaskDes:(NSString*) value;
- (PP_Task_Builder*) clearTaskDes;

- (BOOL) hasTaskType;
- (int32_t) taskType;
- (PP_Task_Builder*) setTaskType:(int32_t) value;
- (PP_Task_Builder*) clearTaskType;

- (BOOL) hasReqLevel;
- (int32_t) reqLevel;
- (PP_Task_Builder*) setReqLevel:(int32_t) value;
- (PP_Task_Builder*) clearReqLevel;

- (BOOL) hasReqPlayerNum;
- (int32_t) reqPlayerNum;
- (PP_Task_Builder*) setReqPlayerNum:(int32_t) value;
- (PP_Task_Builder*) clearReqPlayerNum;

- (PBAppendableArray *)requireList;
- (PP_Task_Require*)requireListAtIndex:(NSUInteger)index;
- (PP_Task_Builder *)addRequireList:(PP_Task_Require*)value;
- (PP_Task_Builder *)setRequireListArray:(NSArray *)array;
- (PP_Task_Builder *)setRequireListValues:(const PP_Task_Require* *)values count:(NSUInteger)count;
- (PP_Task_Builder *)clearRequireList;

- (BOOL) hasDuration;
- (int32_t) duration;
- (PP_Task_Builder*) setDuration:(int32_t) value;
- (PP_Task_Builder*) clearDuration;

- (BOOL) hasActionId;
- (int32_t) actionId;
- (PP_Task_Builder*) setActionId:(int32_t) value;
- (PP_Task_Builder*) clearActionId;

- (BOOL) hasNextTaskId;
- (int32_t) nextTaskId;
- (PP_Task_Builder*) setNextTaskId:(int32_t) value;
- (PP_Task_Builder*) clearNextTaskId;

- (BOOL) hasInvalidTime;
- (int32_t) invalidTime;
- (PP_Task_Builder*) setInvalidTime:(int32_t) value;
- (PP_Task_Builder*) clearInvalidTime;

- (BOOL) hasVersion;
- (int32_t) version;
- (PP_Task_Builder*) setVersion:(int32_t) value;
- (PP_Task_Builder*) clearVersion;

- (PBAppendableArray *)taskAward;
- (PP_Task_Award*)taskAwardAtIndex:(NSUInteger)index;
- (PP_Task_Builder *)addTaskAward:(PP_Task_Award*)value;
- (PP_Task_Builder *)setTaskAwardArray:(NSArray *)array;
- (PP_Task_Builder *)setTaskAwardValues:(const PP_Task_Award* *)values count:(NSUInteger)count;
- (PP_Task_Builder *)clearTaskAward;
@end

