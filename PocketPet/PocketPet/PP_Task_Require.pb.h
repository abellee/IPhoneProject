// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

@class PP_Task_Require;
@class PP_Task_Require_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif


@interface PpTaskRequireRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PP_Task_Require : PBGeneratedMessage {
@private
  BOOL hasTaskId_:1;
  BOOL hasRequireType_:1;
  BOOL hasRequireId_:1;
  BOOL hasRequireNum_:1;
  int32_t taskId;
  int32_t requireType;
  int32_t requireId;
  int32_t requireNum;
}
- (BOOL) hasTaskId;
- (BOOL) hasRequireType;
- (BOOL) hasRequireId;
- (BOOL) hasRequireNum;
@property (readonly) int32_t taskId;
@property (readonly) int32_t requireType;
@property (readonly) int32_t requireId;
@property (readonly) int32_t requireNum;

+ (PP_Task_Require*) defaultInstance;
- (PP_Task_Require*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PP_Task_Require_Builder*) builder;
+ (PP_Task_Require_Builder*) builder;
+ (PP_Task_Require_Builder*) builderWithPrototype:(PP_Task_Require*) prototype;
- (PP_Task_Require_Builder*) toBuilder;

+ (PP_Task_Require*) parseFromData:(NSData*) data;
+ (PP_Task_Require*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PP_Task_Require*) parseFromInputStream:(NSInputStream*) input;
+ (PP_Task_Require*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PP_Task_Require*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PP_Task_Require*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PP_Task_Require_Builder : PBGeneratedMessage_Builder {
@private
  PP_Task_Require* result;
}

- (PP_Task_Require*) defaultInstance;

- (PP_Task_Require_Builder*) clear;
- (PP_Task_Require_Builder*) clone;

- (PP_Task_Require*) build;
- (PP_Task_Require*) buildPartial;

- (PP_Task_Require_Builder*) mergeFrom:(PP_Task_Require*) other;
- (PP_Task_Require_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PP_Task_Require_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTaskId;
- (int32_t) taskId;
- (PP_Task_Require_Builder*) setTaskId:(int32_t) value;
- (PP_Task_Require_Builder*) clearTaskId;

- (BOOL) hasRequireType;
- (int32_t) requireType;
- (PP_Task_Require_Builder*) setRequireType:(int32_t) value;
- (PP_Task_Require_Builder*) clearRequireType;

- (BOOL) hasRequireId;
- (int32_t) requireId;
- (PP_Task_Require_Builder*) setRequireId:(int32_t) value;
- (PP_Task_Require_Builder*) clearRequireId;

- (BOOL) hasRequireNum;
- (int32_t) requireNum;
- (PP_Task_Require_Builder*) setRequireNum:(int32_t) value;
- (PP_Task_Require_Builder*) clearRequireNum;
@end

