// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_Task_Award.pb.h"

@implementation PpTaskAwardRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpTaskAwardRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_Task_Award ()
@property int32_t awardType;
@property int32_t itemId;
@property int32_t awardNum;
@end

@implementation PP_Task_Award

- (BOOL) hasAwardType {
  return !!hasAwardType_;
}
- (void) setHasAwardType:(BOOL) value_ {
  hasAwardType_ = !!value_;
}
@synthesize awardType;
- (BOOL) hasItemId {
  return !!hasItemId_;
}
- (void) setHasItemId:(BOOL) value_ {
  hasItemId_ = !!value_;
}
@synthesize itemId;
- (BOOL) hasAwardNum {
  return !!hasAwardNum_;
}
- (void) setHasAwardNum:(BOOL) value_ {
  hasAwardNum_ = !!value_;
}
@synthesize awardNum;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.awardType = 0;
    self.itemId = 0;
    self.awardNum = 0;
  }
  return self;
}
static PP_Task_Award* defaultPP_Task_AwardInstance = nil;
+ (void) initialize {
  if (self == [PP_Task_Award class]) {
    defaultPP_Task_AwardInstance = [[PP_Task_Award alloc] init];
  }
}
+ (PP_Task_Award*) defaultInstance {
  return defaultPP_Task_AwardInstance;
}
- (PP_Task_Award*) defaultInstance {
  return defaultPP_Task_AwardInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAwardType) {
    [output writeInt32:1 value:self.awardType];
  }
  if (self.hasItemId) {
    [output writeInt32:2 value:self.itemId];
  }
  if (self.hasAwardNum) {
    [output writeInt32:3 value:self.awardNum];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAwardType) {
    size_ += computeInt32Size(1, self.awardType);
  }
  if (self.hasItemId) {
    size_ += computeInt32Size(2, self.itemId);
  }
  if (self.hasAwardNum) {
    size_ += computeInt32Size(3, self.awardNum);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_Task_Award*) parseFromData:(NSData*) data {
  return (PP_Task_Award*)[[[PP_Task_Award builder] mergeFromData:data] build];
}
+ (PP_Task_Award*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Task_Award*)[[[PP_Task_Award builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_Task_Award*) parseFromInputStream:(NSInputStream*) input {
  return (PP_Task_Award*)[[[PP_Task_Award builder] mergeFromInputStream:input] build];
}
+ (PP_Task_Award*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Task_Award*)[[[PP_Task_Award builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_Task_Award*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_Task_Award*)[[[PP_Task_Award builder] mergeFromCodedInputStream:input] build];
}
+ (PP_Task_Award*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Task_Award*)[[[PP_Task_Award builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_Task_Award_Builder*) builder {
  return [[[PP_Task_Award_Builder alloc] init] autorelease];
}
+ (PP_Task_Award_Builder*) builderWithPrototype:(PP_Task_Award*) prototype {
  return [[PP_Task_Award builder] mergeFrom:prototype];
}
- (PP_Task_Award_Builder*) builder {
  return [PP_Task_Award builder];
}
- (PP_Task_Award_Builder*) toBuilder {
  return [PP_Task_Award builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAwardType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"awardType", [NSNumber numberWithInt:self.awardType]];
  }
  if (self.hasItemId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"itemId", [NSNumber numberWithInt:self.itemId]];
  }
  if (self.hasAwardNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"awardNum", [NSNumber numberWithInt:self.awardNum]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_Task_Award class]]) {
    return NO;
  }
  PP_Task_Award *otherMessage = other;
  return
      self.hasAwardType == otherMessage.hasAwardType &&
      (!self.hasAwardType || self.awardType == otherMessage.awardType) &&
      self.hasItemId == otherMessage.hasItemId &&
      (!self.hasItemId || self.itemId == otherMessage.itemId) &&
      self.hasAwardNum == otherMessage.hasAwardNum &&
      (!self.hasAwardNum || self.awardNum == otherMessage.awardNum) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAwardType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.awardType] hash];
  }
  if (self.hasItemId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.itemId] hash];
  }
  if (self.hasAwardNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.awardNum] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_Task_Award_Builder()
@property (retain) PP_Task_Award* result;
@end

@implementation PP_Task_Award_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_Task_Award alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_Task_Award_Builder*) clear {
  self.result = [[[PP_Task_Award alloc] init] autorelease];
  return self;
}
- (PP_Task_Award_Builder*) clone {
  return [PP_Task_Award builderWithPrototype:result];
}
- (PP_Task_Award*) defaultInstance {
  return [PP_Task_Award defaultInstance];
}
- (PP_Task_Award*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_Task_Award*) buildPartial {
  PP_Task_Award* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_Task_Award_Builder*) mergeFrom:(PP_Task_Award*) other {
  if (other == [PP_Task_Award defaultInstance]) {
    return self;
  }
  if (other.hasAwardType) {
    [self setAwardType:other.awardType];
  }
  if (other.hasItemId) {
    [self setItemId:other.itemId];
  }
  if (other.hasAwardNum) {
    [self setAwardNum:other.awardNum];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_Task_Award_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_Task_Award_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAwardType:[input readInt32]];
        break;
      }
      case 16: {
        [self setItemId:[input readInt32]];
        break;
      }
      case 24: {
        [self setAwardNum:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAwardType {
  return result.hasAwardType;
}
- (int32_t) awardType {
  return result.awardType;
}
- (PP_Task_Award_Builder*) setAwardType:(int32_t) value {
  result.hasAwardType = YES;
  result.awardType = value;
  return self;
}
- (PP_Task_Award_Builder*) clearAwardType {
  result.hasAwardType = NO;
  result.awardType = 0;
  return self;
}
- (BOOL) hasItemId {
  return result.hasItemId;
}
- (int32_t) itemId {
  return result.itemId;
}
- (PP_Task_Award_Builder*) setItemId:(int32_t) value {
  result.hasItemId = YES;
  result.itemId = value;
  return self;
}
- (PP_Task_Award_Builder*) clearItemId {
  result.hasItemId = NO;
  result.itemId = 0;
  return self;
}
- (BOOL) hasAwardNum {
  return result.hasAwardNum;
}
- (int32_t) awardNum {
  return result.awardNum;
}
- (PP_Task_Award_Builder*) setAwardNum:(int32_t) value {
  result.hasAwardNum = YES;
  result.awardNum = value;
  return self;
}
- (PP_Task_Award_Builder*) clearAwardNum {
  result.hasAwardNum = NO;
  result.awardNum = 0;
  return self;
}
@end

