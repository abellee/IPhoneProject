// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_Body.pb.h"

@implementation PpBodyRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpBodyRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_Body ()
@property (retain) NSString* funcName;
@property (retain) NSData* content;
@end

@implementation PP_Body

- (BOOL) hasFuncName {
  return !!hasFuncName_;
}
- (void) setHasFuncName:(BOOL) value_ {
  hasFuncName_ = !!value_;
}
@synthesize funcName;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value_ {
  hasContent_ = !!value_;
}
@synthesize content;
- (void) dealloc {
  self.funcName = nil;
  self.content = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.funcName = @"";
    self.content = [NSData data];
  }
  return self;
}
static PP_Body* defaultPP_BodyInstance = nil;
+ (void) initialize {
  if (self == [PP_Body class]) {
    defaultPP_BodyInstance = [[PP_Body alloc] init];
  }
}
+ (PP_Body*) defaultInstance {
  return defaultPP_BodyInstance;
}
- (PP_Body*) defaultInstance {
  return defaultPP_BodyInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFuncName) {
    [output writeString:1 value:self.funcName];
  }
  if (self.hasContent) {
    [output writeData:2 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFuncName) {
    size_ += computeStringSize(1, self.funcName);
  }
  if (self.hasContent) {
    size_ += computeDataSize(2, self.content);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_Body*) parseFromData:(NSData*) data {
  return (PP_Body*)[[[PP_Body builder] mergeFromData:data] build];
}
+ (PP_Body*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Body*)[[[PP_Body builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_Body*) parseFromInputStream:(NSInputStream*) input {
  return (PP_Body*)[[[PP_Body builder] mergeFromInputStream:input] build];
}
+ (PP_Body*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Body*)[[[PP_Body builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_Body*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_Body*)[[[PP_Body builder] mergeFromCodedInputStream:input] build];
}
+ (PP_Body*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Body*)[[[PP_Body builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_Body_Builder*) builder {
  return [[[PP_Body_Builder alloc] init] autorelease];
}
+ (PP_Body_Builder*) builderWithPrototype:(PP_Body*) prototype {
  return [[PP_Body builder] mergeFrom:prototype];
}
- (PP_Body_Builder*) builder {
  return [PP_Body builder];
}
- (PP_Body_Builder*) toBuilder {
  return [PP_Body builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFuncName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"funcName", self.funcName];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_Body class]]) {
    return NO;
  }
  PP_Body *otherMessage = other;
  return
      self.hasFuncName == otherMessage.hasFuncName &&
      (!self.hasFuncName || [self.funcName isEqual:otherMessage.funcName]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasFuncName) {
    hashCode = hashCode * 31 + [self.funcName hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_Body_Builder()
@property (retain) PP_Body* result;
@end

@implementation PP_Body_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_Body alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_Body_Builder*) clear {
  self.result = [[[PP_Body alloc] init] autorelease];
  return self;
}
- (PP_Body_Builder*) clone {
  return [PP_Body builderWithPrototype:result];
}
- (PP_Body*) defaultInstance {
  return [PP_Body defaultInstance];
}
- (PP_Body*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_Body*) buildPartial {
  PP_Body* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_Body_Builder*) mergeFrom:(PP_Body*) other {
  if (other == [PP_Body defaultInstance]) {
    return self;
  }
  if (other.hasFuncName) {
    [self setFuncName:other.funcName];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_Body_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_Body_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFuncName:[input readString]];
        break;
      }
      case 18: {
        [self setContent:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasFuncName {
  return result.hasFuncName;
}
- (NSString*) funcName {
  return result.funcName;
}
- (PP_Body_Builder*) setFuncName:(NSString*) value {
  result.hasFuncName = YES;
  result.funcName = value;
  return self;
}
- (PP_Body_Builder*) clearFuncName {
  result.hasFuncName = NO;
  result.funcName = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSData*) content {
  return result.content;
}
- (PP_Body_Builder*) setContent:(NSData*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (PP_Body_Builder*) clearContent {
  result.hasContent = NO;
  result.content = [NSData data];
  return self;
}
@end

