// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_Error.pb.h"

@implementation PpErrorRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpErrorRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_Error ()
@property int32_t errorType;
@property int32_t errorId;
@end

@implementation PP_Error

- (BOOL) hasErrorType {
  return !!hasErrorType_;
}
- (void) setHasErrorType:(BOOL) value_ {
  hasErrorType_ = !!value_;
}
@synthesize errorType;
- (BOOL) hasErrorId {
  return !!hasErrorId_;
}
- (void) setHasErrorId:(BOOL) value_ {
  hasErrorId_ = !!value_;
}
@synthesize errorId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.errorType = 0;
    self.errorId = 0;
  }
  return self;
}
static PP_Error* defaultPP_ErrorInstance = nil;
+ (void) initialize {
  if (self == [PP_Error class]) {
    defaultPP_ErrorInstance = [[PP_Error alloc] init];
  }
}
+ (PP_Error*) defaultInstance {
  return defaultPP_ErrorInstance;
}
- (PP_Error*) defaultInstance {
  return defaultPP_ErrorInstance;
}
- (BOOL) isInitialized {
  if (!self.hasErrorType) {
    return NO;
  }
  if (!self.hasErrorId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasErrorType) {
    [output writeInt32:1 value:self.errorType];
  }
  if (self.hasErrorId) {
    [output writeInt32:2 value:self.errorId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasErrorType) {
    size_ += computeInt32Size(1, self.errorType);
  }
  if (self.hasErrorId) {
    size_ += computeInt32Size(2, self.errorId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_Error*) parseFromData:(NSData*) data {
  return (PP_Error*)[[[PP_Error builder] mergeFromData:data] build];
}
+ (PP_Error*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Error*)[[[PP_Error builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_Error*) parseFromInputStream:(NSInputStream*) input {
  return (PP_Error*)[[[PP_Error builder] mergeFromInputStream:input] build];
}
+ (PP_Error*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Error*)[[[PP_Error builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_Error*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_Error*)[[[PP_Error builder] mergeFromCodedInputStream:input] build];
}
+ (PP_Error*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_Error*)[[[PP_Error builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_Error_Builder*) builder {
  return [[[PP_Error_Builder alloc] init] autorelease];
}
+ (PP_Error_Builder*) builderWithPrototype:(PP_Error*) prototype {
  return [[PP_Error builder] mergeFrom:prototype];
}
- (PP_Error_Builder*) builder {
  return [PP_Error builder];
}
- (PP_Error_Builder*) toBuilder {
  return [PP_Error builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasErrorType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorType", [NSNumber numberWithInt:self.errorType]];
  }
  if (self.hasErrorId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorId", [NSNumber numberWithInt:self.errorId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_Error class]]) {
    return NO;
  }
  PP_Error *otherMessage = other;
  return
      self.hasErrorType == otherMessage.hasErrorType &&
      (!self.hasErrorType || self.errorType == otherMessage.errorType) &&
      self.hasErrorId == otherMessage.hasErrorId &&
      (!self.hasErrorId || self.errorId == otherMessage.errorId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasErrorType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.errorType] hash];
  }
  if (self.hasErrorId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.errorId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_Error_Builder()
@property (retain) PP_Error* result;
@end

@implementation PP_Error_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_Error alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_Error_Builder*) clear {
  self.result = [[[PP_Error alloc] init] autorelease];
  return self;
}
- (PP_Error_Builder*) clone {
  return [PP_Error builderWithPrototype:result];
}
- (PP_Error*) defaultInstance {
  return [PP_Error defaultInstance];
}
- (PP_Error*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_Error*) buildPartial {
  PP_Error* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_Error_Builder*) mergeFrom:(PP_Error*) other {
  if (other == [PP_Error defaultInstance]) {
    return self;
  }
  if (other.hasErrorType) {
    [self setErrorType:other.errorType];
  }
  if (other.hasErrorId) {
    [self setErrorId:other.errorId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_Error_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_Error_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setErrorType:[input readInt32]];
        break;
      }
      case 16: {
        [self setErrorId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasErrorType {
  return result.hasErrorType;
}
- (int32_t) errorType {
  return result.errorType;
}
- (PP_Error_Builder*) setErrorType:(int32_t) value {
  result.hasErrorType = YES;
  result.errorType = value;
  return self;
}
- (PP_Error_Builder*) clearErrorType {
  result.hasErrorType = NO;
  result.errorType = 0;
  return self;
}
- (BOOL) hasErrorId {
  return result.hasErrorId;
}
- (int32_t) errorId {
  return result.errorId;
}
- (PP_Error_Builder*) setErrorId:(int32_t) value {
  result.hasErrorId = YES;
  result.errorId = value;
  return self;
}
- (PP_Error_Builder*) clearErrorId {
  result.hasErrorId = NO;
  result.errorId = 0;
  return self;
}
@end

