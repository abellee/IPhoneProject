// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_GameControl.pb.h"

@implementation PpGameControlRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpGameControlRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_GameControl ()
@property int32_t targetId;
@property int32_t skillId;
@property int32_t petId;
@end

@implementation PP_GameControl

- (BOOL) hasTargetId {
  return !!hasTargetId_;
}
- (void) setHasTargetId:(BOOL) value_ {
  hasTargetId_ = !!value_;
}
@synthesize targetId;
- (BOOL) hasSkillId {
  return !!hasSkillId_;
}
- (void) setHasSkillId:(BOOL) value_ {
  hasSkillId_ = !!value_;
}
@synthesize skillId;
- (BOOL) hasPetId {
  return !!hasPetId_;
}
- (void) setHasPetId:(BOOL) value_ {
  hasPetId_ = !!value_;
}
@synthesize petId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.targetId = 0;
    self.skillId = 0;
    self.petId = 0;
  }
  return self;
}
static PP_GameControl* defaultPP_GameControlInstance = nil;
+ (void) initialize {
  if (self == [PP_GameControl class]) {
    defaultPP_GameControlInstance = [[PP_GameControl alloc] init];
  }
}
+ (PP_GameControl*) defaultInstance {
  return defaultPP_GameControlInstance;
}
- (PP_GameControl*) defaultInstance {
  return defaultPP_GameControlInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTargetId) {
    [output writeInt32:1 value:self.targetId];
  }
  if (self.hasSkillId) {
    [output writeInt32:2 value:self.skillId];
  }
  if (self.hasPetId) {
    [output writeInt32:3 value:self.petId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTargetId) {
    size_ += computeInt32Size(1, self.targetId);
  }
  if (self.hasSkillId) {
    size_ += computeInt32Size(2, self.skillId);
  }
  if (self.hasPetId) {
    size_ += computeInt32Size(3, self.petId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_GameControl*) parseFromData:(NSData*) data {
  return (PP_GameControl*)[[[PP_GameControl builder] mergeFromData:data] build];
}
+ (PP_GameControl*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_GameControl*)[[[PP_GameControl builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_GameControl*) parseFromInputStream:(NSInputStream*) input {
  return (PP_GameControl*)[[[PP_GameControl builder] mergeFromInputStream:input] build];
}
+ (PP_GameControl*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_GameControl*)[[[PP_GameControl builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_GameControl*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_GameControl*)[[[PP_GameControl builder] mergeFromCodedInputStream:input] build];
}
+ (PP_GameControl*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_GameControl*)[[[PP_GameControl builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_GameControl_Builder*) builder {
  return [[[PP_GameControl_Builder alloc] init] autorelease];
}
+ (PP_GameControl_Builder*) builderWithPrototype:(PP_GameControl*) prototype {
  return [[PP_GameControl builder] mergeFrom:prototype];
}
- (PP_GameControl_Builder*) builder {
  return [PP_GameControl builder];
}
- (PP_GameControl_Builder*) toBuilder {
  return [PP_GameControl builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTargetId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetId", [NSNumber numberWithInt:self.targetId]];
  }
  if (self.hasSkillId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"skillId", [NSNumber numberWithInt:self.skillId]];
  }
  if (self.hasPetId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"petId", [NSNumber numberWithInt:self.petId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_GameControl class]]) {
    return NO;
  }
  PP_GameControl *otherMessage = other;
  return
      self.hasTargetId == otherMessage.hasTargetId &&
      (!self.hasTargetId || self.targetId == otherMessage.targetId) &&
      self.hasSkillId == otherMessage.hasSkillId &&
      (!self.hasSkillId || self.skillId == otherMessage.skillId) &&
      self.hasPetId == otherMessage.hasPetId &&
      (!self.hasPetId || self.petId == otherMessage.petId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasTargetId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.targetId] hash];
  }
  if (self.hasSkillId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.skillId] hash];
  }
  if (self.hasPetId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.petId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_GameControl_Builder()
@property (retain) PP_GameControl* result;
@end

@implementation PP_GameControl_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_GameControl alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_GameControl_Builder*) clear {
  self.result = [[[PP_GameControl alloc] init] autorelease];
  return self;
}
- (PP_GameControl_Builder*) clone {
  return [PP_GameControl builderWithPrototype:result];
}
- (PP_GameControl*) defaultInstance {
  return [PP_GameControl defaultInstance];
}
- (PP_GameControl*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_GameControl*) buildPartial {
  PP_GameControl* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_GameControl_Builder*) mergeFrom:(PP_GameControl*) other {
  if (other == [PP_GameControl defaultInstance]) {
    return self;
  }
  if (other.hasTargetId) {
    [self setTargetId:other.targetId];
  }
  if (other.hasSkillId) {
    [self setSkillId:other.skillId];
  }
  if (other.hasPetId) {
    [self setPetId:other.petId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_GameControl_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_GameControl_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTargetId:[input readInt32]];
        break;
      }
      case 16: {
        [self setSkillId:[input readInt32]];
        break;
      }
      case 24: {
        [self setPetId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTargetId {
  return result.hasTargetId;
}
- (int32_t) targetId {
  return result.targetId;
}
- (PP_GameControl_Builder*) setTargetId:(int32_t) value {
  result.hasTargetId = YES;
  result.targetId = value;
  return self;
}
- (PP_GameControl_Builder*) clearTargetId {
  result.hasTargetId = NO;
  result.targetId = 0;
  return self;
}
- (BOOL) hasSkillId {
  return result.hasSkillId;
}
- (int32_t) skillId {
  return result.skillId;
}
- (PP_GameControl_Builder*) setSkillId:(int32_t) value {
  result.hasSkillId = YES;
  result.skillId = value;
  return self;
}
- (PP_GameControl_Builder*) clearSkillId {
  result.hasSkillId = NO;
  result.skillId = 0;
  return self;
}
- (BOOL) hasPetId {
  return result.hasPetId;
}
- (int32_t) petId {
  return result.petId;
}
- (PP_GameControl_Builder*) setPetId:(int32_t) value {
  result.hasPetId = YES;
  result.petId = value;
  return self;
}
- (PP_GameControl_Builder*) clearPetId {
  result.hasPetId = NO;
  result.petId = 0;
  return self;
}
@end

