// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_BattleInfo.pb.h"

@implementation PpBattleInfoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpBattleInfoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [PpCluserRoot registerAllExtensions:registry];
    [PpBattlePetRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_BattleInfo ()
@property int32_t battleType;
@property (retain) PP_CLUser* targetUser;
@property (retain) PBAppendableArray * autoPetsArray;
@end

@implementation PP_BattleInfo

- (BOOL) hasBattleType {
  return !!hasBattleType_;
}
- (void) setHasBattleType:(BOOL) value_ {
  hasBattleType_ = !!value_;
}
@synthesize battleType;
- (BOOL) hasTargetUser {
  return !!hasTargetUser_;
}
- (void) setHasTargetUser:(BOOL) value_ {
  hasTargetUser_ = !!value_;
}
@synthesize targetUser;
@synthesize autoPetsArray;
@dynamic autoPets;
- (void) dealloc {
  self.targetUser = nil;
  self.autoPetsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.battleType = 0;
    self.targetUser = [PP_CLUser defaultInstance];
  }
  return self;
}
static PP_BattleInfo* defaultPP_BattleInfoInstance = nil;
+ (void) initialize {
  if (self == [PP_BattleInfo class]) {
    defaultPP_BattleInfoInstance = [[PP_BattleInfo alloc] init];
  }
}
+ (PP_BattleInfo*) defaultInstance {
  return defaultPP_BattleInfoInstance;
}
- (PP_BattleInfo*) defaultInstance {
  return defaultPP_BattleInfoInstance;
}
- (PBArray *)autoPets {
  return autoPetsArray;
}
- (PP_BattlePet*)autoPetsAtIndex:(NSUInteger)index {
  return [autoPetsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBattleType) {
    [output writeInt32:1 value:self.battleType];
  }
  if (self.hasTargetUser) {
    [output writeMessage:2 value:self.targetUser];
  }
  for (PP_BattlePet *element in self.autoPetsArray) {
    [output writeMessage:3 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBattleType) {
    size_ += computeInt32Size(1, self.battleType);
  }
  if (self.hasTargetUser) {
    size_ += computeMessageSize(2, self.targetUser);
  }
  for (PP_BattlePet *element in self.autoPetsArray) {
    size_ += computeMessageSize(3, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_BattleInfo*) parseFromData:(NSData*) data {
  return (PP_BattleInfo*)[[[PP_BattleInfo builder] mergeFromData:data] build];
}
+ (PP_BattleInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_BattleInfo*)[[[PP_BattleInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_BattleInfo*) parseFromInputStream:(NSInputStream*) input {
  return (PP_BattleInfo*)[[[PP_BattleInfo builder] mergeFromInputStream:input] build];
}
+ (PP_BattleInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_BattleInfo*)[[[PP_BattleInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_BattleInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_BattleInfo*)[[[PP_BattleInfo builder] mergeFromCodedInputStream:input] build];
}
+ (PP_BattleInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_BattleInfo*)[[[PP_BattleInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_BattleInfo_Builder*) builder {
  return [[[PP_BattleInfo_Builder alloc] init] autorelease];
}
+ (PP_BattleInfo_Builder*) builderWithPrototype:(PP_BattleInfo*) prototype {
  return [[PP_BattleInfo builder] mergeFrom:prototype];
}
- (PP_BattleInfo_Builder*) builder {
  return [PP_BattleInfo builder];
}
- (PP_BattleInfo_Builder*) toBuilder {
  return [PP_BattleInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBattleType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"battleType", [NSNumber numberWithInt:self.battleType]];
  }
  if (self.hasTargetUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"targetUser"];
    [self.targetUser writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (PP_BattlePet* element in self.autoPetsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"autoPets"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_BattleInfo class]]) {
    return NO;
  }
  PP_BattleInfo *otherMessage = other;
  return
      self.hasBattleType == otherMessage.hasBattleType &&
      (!self.hasBattleType || self.battleType == otherMessage.battleType) &&
      self.hasTargetUser == otherMessage.hasTargetUser &&
      (!self.hasTargetUser || [self.targetUser isEqual:otherMessage.targetUser]) &&
      [self.autoPetsArray isEqualToArray:otherMessage.autoPetsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasBattleType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.battleType] hash];
  }
  if (self.hasTargetUser) {
    hashCode = hashCode * 31 + [self.targetUser hash];
  }
  for (PP_BattlePet* element in self.autoPetsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_BattleInfo_Builder()
@property (retain) PP_BattleInfo* result;
@end

@implementation PP_BattleInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_BattleInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_BattleInfo_Builder*) clear {
  self.result = [[[PP_BattleInfo alloc] init] autorelease];
  return self;
}
- (PP_BattleInfo_Builder*) clone {
  return [PP_BattleInfo builderWithPrototype:result];
}
- (PP_BattleInfo*) defaultInstance {
  return [PP_BattleInfo defaultInstance];
}
- (PP_BattleInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_BattleInfo*) buildPartial {
  PP_BattleInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_BattleInfo_Builder*) mergeFrom:(PP_BattleInfo*) other {
  if (other == [PP_BattleInfo defaultInstance]) {
    return self;
  }
  if (other.hasBattleType) {
    [self setBattleType:other.battleType];
  }
  if (other.hasTargetUser) {
    [self mergeTargetUser:other.targetUser];
  }
  if (other.autoPetsArray.count > 0) {
    if (result.autoPetsArray == nil) {
      result.autoPetsArray = [[other.autoPetsArray copyWithZone:[other.autoPetsArray zone]] autorelease];
    } else {
      [result.autoPetsArray appendArray:other.autoPetsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_BattleInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_BattleInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBattleType:[input readInt32]];
        break;
      }
      case 18: {
        PP_CLUser_Builder* subBuilder = [PP_CLUser builder];
        if (self.hasTargetUser) {
          [subBuilder mergeFrom:self.targetUser];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTargetUser:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PP_BattlePet_Builder* subBuilder = [PP_BattlePet builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAutoPets:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasBattleType {
  return result.hasBattleType;
}
- (int32_t) battleType {
  return result.battleType;
}
- (PP_BattleInfo_Builder*) setBattleType:(int32_t) value {
  result.hasBattleType = YES;
  result.battleType = value;
  return self;
}
- (PP_BattleInfo_Builder*) clearBattleType {
  result.hasBattleType = NO;
  result.battleType = 0;
  return self;
}
- (BOOL) hasTargetUser {
  return result.hasTargetUser;
}
- (PP_CLUser*) targetUser {
  return result.targetUser;
}
- (PP_BattleInfo_Builder*) setTargetUser:(PP_CLUser*) value {
  result.hasTargetUser = YES;
  result.targetUser = value;
  return self;
}
- (PP_BattleInfo_Builder*) setTargetUserBuilder:(PP_CLUser_Builder*) builderForValue {
  return [self setTargetUser:[builderForValue build]];
}
- (PP_BattleInfo_Builder*) mergeTargetUser:(PP_CLUser*) value {
  if (result.hasTargetUser &&
      result.targetUser != [PP_CLUser defaultInstance]) {
    result.targetUser =
      [[[PP_CLUser builderWithPrototype:result.targetUser] mergeFrom:value] buildPartial];
  } else {
    result.targetUser = value;
  }
  result.hasTargetUser = YES;
  return self;
}
- (PP_BattleInfo_Builder*) clearTargetUser {
  result.hasTargetUser = NO;
  result.targetUser = [PP_CLUser defaultInstance];
  return self;
}
- (PBAppendableArray *)autoPets {
  return result.autoPetsArray;
}
- (PP_BattlePet*)autoPetsAtIndex:(NSUInteger)index {
  return [result autoPetsAtIndex:index];
}
- (PP_BattleInfo_Builder *)addAutoPets:(PP_BattlePet*)value {
  if (result.autoPetsArray == nil) {
    result.autoPetsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.autoPetsArray addObject:value];
  return self;
}
- (PP_BattleInfo_Builder *)setAutoPetsArray:(NSArray *)array {
  result.autoPetsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (PP_BattleInfo_Builder *)setAutoPetsValues:(const PP_BattlePet* *)values count:(NSUInteger)count {
  result.autoPetsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (PP_BattleInfo_Builder *)clearAutoPets {
  result.autoPetsArray = nil;
  return self;
}
@end

