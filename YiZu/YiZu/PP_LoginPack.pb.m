// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_LoginPack.pb.h"

@implementation PpLoginPackRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpLoginPackRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [PpAccountRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_LoginPack ()
@property (retain) PP_Account* account;
@property int32_t loginMode;
@property int32_t version;
@end

@implementation PP_LoginPack

- (BOOL) hasAccount {
  return !!hasAccount_;
}
- (void) setHasAccount:(BOOL) value_ {
  hasAccount_ = !!value_;
}
@synthesize account;
- (BOOL) hasLoginMode {
  return !!hasLoginMode_;
}
- (void) setHasLoginMode:(BOOL) value_ {
  hasLoginMode_ = !!value_;
}
@synthesize loginMode;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value_ {
  hasVersion_ = !!value_;
}
@synthesize version;
- (void) dealloc {
  self.account = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.account = [PP_Account defaultInstance];
    self.loginMode = 0;
    self.version = 0;
  }
  return self;
}
static PP_LoginPack* defaultPP_LoginPackInstance = nil;
+ (void) initialize {
  if (self == [PP_LoginPack class]) {
    defaultPP_LoginPackInstance = [[PP_LoginPack alloc] init];
  }
}
+ (PP_LoginPack*) defaultInstance {
  return defaultPP_LoginPackInstance;
}
- (PP_LoginPack*) defaultInstance {
  return defaultPP_LoginPackInstance;
}
- (BOOL) isInitialized {
  if (!self.hasAccount) {
    return NO;
  }
  if (!self.hasLoginMode) {
    return NO;
  }
  if (!self.account.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccount) {
    [output writeMessage:1 value:self.account];
  }
  if (self.hasLoginMode) {
    [output writeInt32:2 value:self.loginMode];
  }
  if (self.hasVersion) {
    [output writeInt32:3 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccount) {
    size_ += computeMessageSize(1, self.account);
  }
  if (self.hasLoginMode) {
    size_ += computeInt32Size(2, self.loginMode);
  }
  if (self.hasVersion) {
    size_ += computeInt32Size(3, self.version);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_LoginPack*) parseFromData:(NSData*) data {
  return (PP_LoginPack*)[[[PP_LoginPack builder] mergeFromData:data] build];
}
+ (PP_LoginPack*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_LoginPack*)[[[PP_LoginPack builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_LoginPack*) parseFromInputStream:(NSInputStream*) input {
  return (PP_LoginPack*)[[[PP_LoginPack builder] mergeFromInputStream:input] build];
}
+ (PP_LoginPack*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_LoginPack*)[[[PP_LoginPack builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_LoginPack*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_LoginPack*)[[[PP_LoginPack builder] mergeFromCodedInputStream:input] build];
}
+ (PP_LoginPack*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_LoginPack*)[[[PP_LoginPack builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_LoginPack_Builder*) builder {
  return [[[PP_LoginPack_Builder alloc] init] autorelease];
}
+ (PP_LoginPack_Builder*) builderWithPrototype:(PP_LoginPack*) prototype {
  return [[PP_LoginPack builder] mergeFrom:prototype];
}
- (PP_LoginPack_Builder*) builder {
  return [PP_LoginPack builder];
}
- (PP_LoginPack_Builder*) toBuilder {
  return [PP_LoginPack builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccount) {
    [output appendFormat:@"%@%@ {\n", indent, @"account"];
    [self.account writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasLoginMode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"loginMode", [NSNumber numberWithInt:self.loginMode]];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", [NSNumber numberWithInt:self.version]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_LoginPack class]]) {
    return NO;
  }
  PP_LoginPack *otherMessage = other;
  return
      self.hasAccount == otherMessage.hasAccount &&
      (!self.hasAccount || [self.account isEqual:otherMessage.account]) &&
      self.hasLoginMode == otherMessage.hasLoginMode &&
      (!self.hasLoginMode || self.loginMode == otherMessage.loginMode) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || self.version == otherMessage.version) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccount) {
    hashCode = hashCode * 31 + [self.account hash];
  }
  if (self.hasLoginMode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.loginMode] hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.version] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_LoginPack_Builder()
@property (retain) PP_LoginPack* result;
@end

@implementation PP_LoginPack_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_LoginPack alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_LoginPack_Builder*) clear {
  self.result = [[[PP_LoginPack alloc] init] autorelease];
  return self;
}
- (PP_LoginPack_Builder*) clone {
  return [PP_LoginPack builderWithPrototype:result];
}
- (PP_LoginPack*) defaultInstance {
  return [PP_LoginPack defaultInstance];
}
- (PP_LoginPack*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_LoginPack*) buildPartial {
  PP_LoginPack* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_LoginPack_Builder*) mergeFrom:(PP_LoginPack*) other {
  if (other == [PP_LoginPack defaultInstance]) {
    return self;
  }
  if (other.hasAccount) {
    [self mergeAccount:other.account];
  }
  if (other.hasLoginMode) {
    [self setLoginMode:other.loginMode];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_LoginPack_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_LoginPack_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PP_Account_Builder* subBuilder = [PP_Account builder];
        if (self.hasAccount) {
          [subBuilder mergeFrom:self.account];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAccount:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setLoginMode:[input readInt32]];
        break;
      }
      case 24: {
        [self setVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccount {
  return result.hasAccount;
}
- (PP_Account*) account {
  return result.account;
}
- (PP_LoginPack_Builder*) setAccount:(PP_Account*) value {
  result.hasAccount = YES;
  result.account = value;
  return self;
}
- (PP_LoginPack_Builder*) setAccountBuilder:(PP_Account_Builder*) builderForValue {
  return [self setAccount:[builderForValue build]];
}
- (PP_LoginPack_Builder*) mergeAccount:(PP_Account*) value {
  if (result.hasAccount &&
      result.account != [PP_Account defaultInstance]) {
    result.account =
      [[[PP_Account builderWithPrototype:result.account] mergeFrom:value] buildPartial];
  } else {
    result.account = value;
  }
  result.hasAccount = YES;
  return self;
}
- (PP_LoginPack_Builder*) clearAccount {
  result.hasAccount = NO;
  result.account = [PP_Account defaultInstance];
  return self;
}
- (BOOL) hasLoginMode {
  return result.hasLoginMode;
}
- (int32_t) loginMode {
  return result.loginMode;
}
- (PP_LoginPack_Builder*) setLoginMode:(int32_t) value {
  result.hasLoginMode = YES;
  result.loginMode = value;
  return self;
}
- (PP_LoginPack_Builder*) clearLoginMode {
  result.hasLoginMode = NO;
  result.loginMode = 0;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (PP_LoginPack_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (PP_LoginPack_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
@end

