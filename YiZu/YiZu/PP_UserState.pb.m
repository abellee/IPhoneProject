// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_UserState.pb.h"

@implementation PpUserStateRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpUserStateRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_UserState ()
@property int32_t uid;
@property int32_t state;
@end

@implementation PP_UserState

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) value_ {
  hasUid_ = !!value_;
}
@synthesize uid;
- (BOOL) hasState {
  return !!hasState_;
}
- (void) setHasState:(BOOL) value_ {
  hasState_ = !!value_;
}
@synthesize state;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.uid = 0;
    self.state = 0;
  }
  return self;
}
static PP_UserState* defaultPP_UserStateInstance = nil;
+ (void) initialize {
  if (self == [PP_UserState class]) {
    defaultPP_UserStateInstance = [[PP_UserState alloc] init];
  }
}
+ (PP_UserState*) defaultInstance {
  return defaultPP_UserStateInstance;
}
- (PP_UserState*) defaultInstance {
  return defaultPP_UserStateInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  if (!self.hasState) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeInt32:1 value:self.uid];
  }
  if (self.hasState) {
    [output writeInt32:2 value:self.state];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeInt32Size(1, self.uid);
  }
  if (self.hasState) {
    size_ += computeInt32Size(2, self.state);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_UserState*) parseFromData:(NSData*) data {
  return (PP_UserState*)[[[PP_UserState builder] mergeFromData:data] build];
}
+ (PP_UserState*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_UserState*)[[[PP_UserState builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_UserState*) parseFromInputStream:(NSInputStream*) input {
  return (PP_UserState*)[[[PP_UserState builder] mergeFromInputStream:input] build];
}
+ (PP_UserState*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_UserState*)[[[PP_UserState builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_UserState*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_UserState*)[[[PP_UserState builder] mergeFromCodedInputStream:input] build];
}
+ (PP_UserState*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_UserState*)[[[PP_UserState builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_UserState_Builder*) builder {
  return [[[PP_UserState_Builder alloc] init] autorelease];
}
+ (PP_UserState_Builder*) builderWithPrototype:(PP_UserState*) prototype {
  return [[PP_UserState builder] mergeFrom:prototype];
}
- (PP_UserState_Builder*) builder {
  return [PP_UserState builder];
}
- (PP_UserState_Builder*) toBuilder {
  return [PP_UserState builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithInt:self.uid]];
  }
  if (self.hasState) {
    [output appendFormat:@"%@%@: %@\n", indent, @"state", [NSNumber numberWithInt:self.state]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_UserState class]]) {
    return NO;
  }
  PP_UserState *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasState == otherMessage.hasState &&
      (!self.hasState || self.state == otherMessage.state) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.uid] hash];
  }
  if (self.hasState) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.state] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_UserState_Builder()
@property (retain) PP_UserState* result;
@end

@implementation PP_UserState_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_UserState alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_UserState_Builder*) clear {
  self.result = [[[PP_UserState alloc] init] autorelease];
  return self;
}
- (PP_UserState_Builder*) clone {
  return [PP_UserState builderWithPrototype:result];
}
- (PP_UserState*) defaultInstance {
  return [PP_UserState defaultInstance];
}
- (PP_UserState*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_UserState*) buildPartial {
  PP_UserState* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_UserState_Builder*) mergeFrom:(PP_UserState*) other {
  if (other == [PP_UserState defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasState) {
    [self setState:other.state];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_UserState_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_UserState_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readInt32]];
        break;
      }
      case 16: {
        [self setState:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return result.hasUid;
}
- (int32_t) uid {
  return result.uid;
}
- (PP_UserState_Builder*) setUid:(int32_t) value {
  result.hasUid = YES;
  result.uid = value;
  return self;
}
- (PP_UserState_Builder*) clearUid {
  result.hasUid = NO;
  result.uid = 0;
  return self;
}
- (BOOL) hasState {
  return result.hasState;
}
- (int32_t) state {
  return result.state;
}
- (PP_UserState_Builder*) setState:(int32_t) value {
  result.hasState = YES;
  result.state = value;
  return self;
}
- (PP_UserState_Builder*) clearState {
  result.hasState = NO;
  result.state = 0;
  return self;
}
@end

