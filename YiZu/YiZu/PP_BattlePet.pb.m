// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PP_BattlePet.pb.h"

@implementation PpBattlePetRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PpBattlePetRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PP_BattlePet ()
@property int32_t tid;
@property int32_t mid;
@property int32_t level;
@property int32_t isVariation;
@property int32_t variationLevel;
@end

@implementation PP_BattlePet

- (BOOL) hasTid {
  return !!hasTid_;
}
- (void) setHasTid:(BOOL) value_ {
  hasTid_ = !!value_;
}
@synthesize tid;
- (BOOL) hasMid {
  return !!hasMid_;
}
- (void) setHasMid:(BOOL) value_ {
  hasMid_ = !!value_;
}
@synthesize mid;
- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value_ {
  hasLevel_ = !!value_;
}
@synthesize level;
- (BOOL) hasIsVariation {
  return !!hasIsVariation_;
}
- (void) setHasIsVariation:(BOOL) value_ {
  hasIsVariation_ = !!value_;
}
@synthesize isVariation;
- (BOOL) hasVariationLevel {
  return !!hasVariationLevel_;
}
- (void) setHasVariationLevel:(BOOL) value_ {
  hasVariationLevel_ = !!value_;
}
@synthesize variationLevel;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.tid = 0;
    self.mid = 0;
    self.level = 0;
    self.isVariation = 0;
    self.variationLevel = 0;
  }
  return self;
}
static PP_BattlePet* defaultPP_BattlePetInstance = nil;
+ (void) initialize {
  if (self == [PP_BattlePet class]) {
    defaultPP_BattlePetInstance = [[PP_BattlePet alloc] init];
  }
}
+ (PP_BattlePet*) defaultInstance {
  return defaultPP_BattlePetInstance;
}
- (PP_BattlePet*) defaultInstance {
  return defaultPP_BattlePetInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTid) {
    [output writeInt32:1 value:self.tid];
  }
  if (self.hasMid) {
    [output writeInt32:2 value:self.mid];
  }
  if (self.hasLevel) {
    [output writeInt32:3 value:self.level];
  }
  if (self.hasIsVariation) {
    [output writeInt32:4 value:self.isVariation];
  }
  if (self.hasVariationLevel) {
    [output writeInt32:5 value:self.variationLevel];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTid) {
    size_ += computeInt32Size(1, self.tid);
  }
  if (self.hasMid) {
    size_ += computeInt32Size(2, self.mid);
  }
  if (self.hasLevel) {
    size_ += computeInt32Size(3, self.level);
  }
  if (self.hasIsVariation) {
    size_ += computeInt32Size(4, self.isVariation);
  }
  if (self.hasVariationLevel) {
    size_ += computeInt32Size(5, self.variationLevel);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PP_BattlePet*) parseFromData:(NSData*) data {
  return (PP_BattlePet*)[[[PP_BattlePet builder] mergeFromData:data] build];
}
+ (PP_BattlePet*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_BattlePet*)[[[PP_BattlePet builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PP_BattlePet*) parseFromInputStream:(NSInputStream*) input {
  return (PP_BattlePet*)[[[PP_BattlePet builder] mergeFromInputStream:input] build];
}
+ (PP_BattlePet*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_BattlePet*)[[[PP_BattlePet builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_BattlePet*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PP_BattlePet*)[[[PP_BattlePet builder] mergeFromCodedInputStream:input] build];
}
+ (PP_BattlePet*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PP_BattlePet*)[[[PP_BattlePet builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PP_BattlePet_Builder*) builder {
  return [[[PP_BattlePet_Builder alloc] init] autorelease];
}
+ (PP_BattlePet_Builder*) builderWithPrototype:(PP_BattlePet*) prototype {
  return [[PP_BattlePet builder] mergeFrom:prototype];
}
- (PP_BattlePet_Builder*) builder {
  return [PP_BattlePet builder];
}
- (PP_BattlePet_Builder*) toBuilder {
  return [PP_BattlePet builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tid", [NSNumber numberWithInt:self.tid]];
  }
  if (self.hasMid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mid", [NSNumber numberWithInt:self.mid]];
  }
  if (self.hasLevel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"level", [NSNumber numberWithInt:self.level]];
  }
  if (self.hasIsVariation) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isVariation", [NSNumber numberWithInt:self.isVariation]];
  }
  if (self.hasVariationLevel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"variationLevel", [NSNumber numberWithInt:self.variationLevel]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PP_BattlePet class]]) {
    return NO;
  }
  PP_BattlePet *otherMessage = other;
  return
      self.hasTid == otherMessage.hasTid &&
      (!self.hasTid || self.tid == otherMessage.tid) &&
      self.hasMid == otherMessage.hasMid &&
      (!self.hasMid || self.mid == otherMessage.mid) &&
      self.hasLevel == otherMessage.hasLevel &&
      (!self.hasLevel || self.level == otherMessage.level) &&
      self.hasIsVariation == otherMessage.hasIsVariation &&
      (!self.hasIsVariation || self.isVariation == otherMessage.isVariation) &&
      self.hasVariationLevel == otherMessage.hasVariationLevel &&
      (!self.hasVariationLevel || self.variationLevel == otherMessage.variationLevel) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasTid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.tid] hash];
  }
  if (self.hasMid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mid] hash];
  }
  if (self.hasLevel) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.level] hash];
  }
  if (self.hasIsVariation) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.isVariation] hash];
  }
  if (self.hasVariationLevel) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.variationLevel] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PP_BattlePet_Builder()
@property (retain) PP_BattlePet* result;
@end

@implementation PP_BattlePet_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PP_BattlePet alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PP_BattlePet_Builder*) clear {
  self.result = [[[PP_BattlePet alloc] init] autorelease];
  return self;
}
- (PP_BattlePet_Builder*) clone {
  return [PP_BattlePet builderWithPrototype:result];
}
- (PP_BattlePet*) defaultInstance {
  return [PP_BattlePet defaultInstance];
}
- (PP_BattlePet*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PP_BattlePet*) buildPartial {
  PP_BattlePet* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PP_BattlePet_Builder*) mergeFrom:(PP_BattlePet*) other {
  if (other == [PP_BattlePet defaultInstance]) {
    return self;
  }
  if (other.hasTid) {
    [self setTid:other.tid];
  }
  if (other.hasMid) {
    [self setMid:other.mid];
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  if (other.hasIsVariation) {
    [self setIsVariation:other.isVariation];
  }
  if (other.hasVariationLevel) {
    [self setVariationLevel:other.variationLevel];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PP_BattlePet_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PP_BattlePet_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTid:[input readInt32]];
        break;
      }
      case 16: {
        [self setMid:[input readInt32]];
        break;
      }
      case 24: {
        [self setLevel:[input readInt32]];
        break;
      }
      case 32: {
        [self setIsVariation:[input readInt32]];
        break;
      }
      case 40: {
        [self setVariationLevel:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTid {
  return result.hasTid;
}
- (int32_t) tid {
  return result.tid;
}
- (PP_BattlePet_Builder*) setTid:(int32_t) value {
  result.hasTid = YES;
  result.tid = value;
  return self;
}
- (PP_BattlePet_Builder*) clearTid {
  result.hasTid = NO;
  result.tid = 0;
  return self;
}
- (BOOL) hasMid {
  return result.hasMid;
}
- (int32_t) mid {
  return result.mid;
}
- (PP_BattlePet_Builder*) setMid:(int32_t) value {
  result.hasMid = YES;
  result.mid = value;
  return self;
}
- (PP_BattlePet_Builder*) clearMid {
  result.hasMid = NO;
  result.mid = 0;
  return self;
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (int32_t) level {
  return result.level;
}
- (PP_BattlePet_Builder*) setLevel:(int32_t) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (PP_BattlePet_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = 0;
  return self;
}
- (BOOL) hasIsVariation {
  return result.hasIsVariation;
}
- (int32_t) isVariation {
  return result.isVariation;
}
- (PP_BattlePet_Builder*) setIsVariation:(int32_t) value {
  result.hasIsVariation = YES;
  result.isVariation = value;
  return self;
}
- (PP_BattlePet_Builder*) clearIsVariation {
  result.hasIsVariation = NO;
  result.isVariation = 0;
  return self;
}
- (BOOL) hasVariationLevel {
  return result.hasVariationLevel;
}
- (int32_t) variationLevel {
  return result.variationLevel;
}
- (PP_BattlePet_Builder*) setVariationLevel:(int32_t) value {
  result.hasVariationLevel = YES;
  result.variationLevel = value;
  return self;
}
- (PP_BattlePet_Builder*) clearVariationLevel {
  result.hasVariationLevel = NO;
  result.variationLevel = 0;
  return self;
}
@end

