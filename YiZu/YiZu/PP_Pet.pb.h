// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

@class PP_Pet;
@class PP_Pet_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif


@interface PpPetRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PP_Pet : PBGeneratedMessage {
@private
  BOOL hasTid_:1;
  BOOL hasMagicDefense_:1;
  BOOL hasMagicDamage_:1;
  BOOL hasDefense_:1;
  BOOL hasAttack_:1;
  BOOL hasEndur_:1;
  BOOL hasVigour_:1;
  BOOL hasIntellegence_:1;
  BOOL hasAgile_:1;
  BOOL hasPower_:1;
  BOOL hasVariationLevel_:1;
  BOOL hasIsVariation_:1;
  BOOL hasAge_:1;
  BOOL hasFeel_:1;
  BOOL hasGrow_:1;
  BOOL hasLife_:1;
  BOOL hasState_:1;
  BOOL hasTotalMp_:1;
  BOOL hasCurMp_:1;
  BOOL hasTotalHp_:1;
  BOOL hasCurHp_:1;
  BOOL hasTotalExp_:1;
  BOOL hasCurExp_:1;
  BOOL hasLevel_:1;
  BOOL hasPetId_:1;
  BOOL hasUid_:1;
  BOOL hasPetName_:1;
  int32_t tid;
  int32_t magicDefense;
  int32_t magicDamage;
  int32_t defense;
  int32_t attack;
  int32_t endur;
  int32_t vigour;
  int32_t intellegence;
  int32_t agile;
  int32_t power;
  int32_t variationLevel;
  int32_t isVariation;
  int32_t age;
  int32_t feel;
  int32_t grow;
  int32_t life;
  int32_t state;
  int32_t totalMp;
  int32_t curMp;
  int32_t totalHp;
  int32_t curHp;
  int32_t totalExp;
  int32_t curExp;
  int32_t level;
  int32_t petId;
  int32_t uid;
  NSString* petName;
}
- (BOOL) hasUid;
- (BOOL) hasPetId;
- (BOOL) hasPetName;
- (BOOL) hasLevel;
- (BOOL) hasCurExp;
- (BOOL) hasTotalExp;
- (BOOL) hasCurHp;
- (BOOL) hasTotalHp;
- (BOOL) hasCurMp;
- (BOOL) hasTotalMp;
- (BOOL) hasState;
- (BOOL) hasLife;
- (BOOL) hasGrow;
- (BOOL) hasFeel;
- (BOOL) hasAge;
- (BOOL) hasIsVariation;
- (BOOL) hasVariationLevel;
- (BOOL) hasPower;
- (BOOL) hasAgile;
- (BOOL) hasIntellegence;
- (BOOL) hasVigour;
- (BOOL) hasEndur;
- (BOOL) hasAttack;
- (BOOL) hasDefense;
- (BOOL) hasMagicDamage;
- (BOOL) hasMagicDefense;
- (BOOL) hasTid;
@property (readonly) int32_t uid;
@property (readonly) int32_t petId;
@property (readonly, retain) NSString* petName;
@property (readonly) int32_t level;
@property (readonly) int32_t curExp;
@property (readonly) int32_t totalExp;
@property (readonly) int32_t curHp;
@property (readonly) int32_t totalHp;
@property (readonly) int32_t curMp;
@property (readonly) int32_t totalMp;
@property (readonly) int32_t state;
@property (readonly) int32_t life;
@property (readonly) int32_t grow;
@property (readonly) int32_t feel;
@property (readonly) int32_t age;
@property (readonly) int32_t isVariation;
@property (readonly) int32_t variationLevel;
@property (readonly) int32_t power;
@property (readonly) int32_t agile;
@property (readonly) int32_t intellegence;
@property (readonly) int32_t vigour;
@property (readonly) int32_t endur;
@property (readonly) int32_t attack;
@property (readonly) int32_t defense;
@property (readonly) int32_t magicDamage;
@property (readonly) int32_t magicDefense;
@property (readonly) int32_t tid;

+ (PP_Pet*) defaultInstance;
- (PP_Pet*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PP_Pet_Builder*) builder;
+ (PP_Pet_Builder*) builder;
+ (PP_Pet_Builder*) builderWithPrototype:(PP_Pet*) prototype;
- (PP_Pet_Builder*) toBuilder;

+ (PP_Pet*) parseFromData:(NSData*) data;
+ (PP_Pet*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PP_Pet*) parseFromInputStream:(NSInputStream*) input;
+ (PP_Pet*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PP_Pet*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PP_Pet*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PP_Pet_Builder : PBGeneratedMessage_Builder {
@private
  PP_Pet* result;
}

- (PP_Pet*) defaultInstance;

- (PP_Pet_Builder*) clear;
- (PP_Pet_Builder*) clone;

- (PP_Pet*) build;
- (PP_Pet*) buildPartial;

- (PP_Pet_Builder*) mergeFrom:(PP_Pet*) other;
- (PP_Pet_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PP_Pet_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUid;
- (int32_t) uid;
- (PP_Pet_Builder*) setUid:(int32_t) value;
- (PP_Pet_Builder*) clearUid;

- (BOOL) hasPetId;
- (int32_t) petId;
- (PP_Pet_Builder*) setPetId:(int32_t) value;
- (PP_Pet_Builder*) clearPetId;

- (BOOL) hasPetName;
- (NSString*) petName;
- (PP_Pet_Builder*) setPetName:(NSString*) value;
- (PP_Pet_Builder*) clearPetName;

- (BOOL) hasLevel;
- (int32_t) level;
- (PP_Pet_Builder*) setLevel:(int32_t) value;
- (PP_Pet_Builder*) clearLevel;

- (BOOL) hasCurExp;
- (int32_t) curExp;
- (PP_Pet_Builder*) setCurExp:(int32_t) value;
- (PP_Pet_Builder*) clearCurExp;

- (BOOL) hasTotalExp;
- (int32_t) totalExp;
- (PP_Pet_Builder*) setTotalExp:(int32_t) value;
- (PP_Pet_Builder*) clearTotalExp;

- (BOOL) hasCurHp;
- (int32_t) curHp;
- (PP_Pet_Builder*) setCurHp:(int32_t) value;
- (PP_Pet_Builder*) clearCurHp;

- (BOOL) hasTotalHp;
- (int32_t) totalHp;
- (PP_Pet_Builder*) setTotalHp:(int32_t) value;
- (PP_Pet_Builder*) clearTotalHp;

- (BOOL) hasCurMp;
- (int32_t) curMp;
- (PP_Pet_Builder*) setCurMp:(int32_t) value;
- (PP_Pet_Builder*) clearCurMp;

- (BOOL) hasTotalMp;
- (int32_t) totalMp;
- (PP_Pet_Builder*) setTotalMp:(int32_t) value;
- (PP_Pet_Builder*) clearTotalMp;

- (BOOL) hasState;
- (int32_t) state;
- (PP_Pet_Builder*) setState:(int32_t) value;
- (PP_Pet_Builder*) clearState;

- (BOOL) hasLife;
- (int32_t) life;
- (PP_Pet_Builder*) setLife:(int32_t) value;
- (PP_Pet_Builder*) clearLife;

- (BOOL) hasGrow;
- (int32_t) grow;
- (PP_Pet_Builder*) setGrow:(int32_t) value;
- (PP_Pet_Builder*) clearGrow;

- (BOOL) hasFeel;
- (int32_t) feel;
- (PP_Pet_Builder*) setFeel:(int32_t) value;
- (PP_Pet_Builder*) clearFeel;

- (BOOL) hasAge;
- (int32_t) age;
- (PP_Pet_Builder*) setAge:(int32_t) value;
- (PP_Pet_Builder*) clearAge;

- (BOOL) hasIsVariation;
- (int32_t) isVariation;
- (PP_Pet_Builder*) setIsVariation:(int32_t) value;
- (PP_Pet_Builder*) clearIsVariation;

- (BOOL) hasVariationLevel;
- (int32_t) variationLevel;
- (PP_Pet_Builder*) setVariationLevel:(int32_t) value;
- (PP_Pet_Builder*) clearVariationLevel;

- (BOOL) hasPower;
- (int32_t) power;
- (PP_Pet_Builder*) setPower:(int32_t) value;
- (PP_Pet_Builder*) clearPower;

- (BOOL) hasAgile;
- (int32_t) agile;
- (PP_Pet_Builder*) setAgile:(int32_t) value;
- (PP_Pet_Builder*) clearAgile;

- (BOOL) hasIntellegence;
- (int32_t) intellegence;
- (PP_Pet_Builder*) setIntellegence:(int32_t) value;
- (PP_Pet_Builder*) clearIntellegence;

- (BOOL) hasVigour;
- (int32_t) vigour;
- (PP_Pet_Builder*) setVigour:(int32_t) value;
- (PP_Pet_Builder*) clearVigour;

- (BOOL) hasEndur;
- (int32_t) endur;
- (PP_Pet_Builder*) setEndur:(int32_t) value;
- (PP_Pet_Builder*) clearEndur;

- (BOOL) hasAttack;
- (int32_t) attack;
- (PP_Pet_Builder*) setAttack:(int32_t) value;
- (PP_Pet_Builder*) clearAttack;

- (BOOL) hasDefense;
- (int32_t) defense;
- (PP_Pet_Builder*) setDefense:(int32_t) value;
- (PP_Pet_Builder*) clearDefense;

- (BOOL) hasMagicDamage;
- (int32_t) magicDamage;
- (PP_Pet_Builder*) setMagicDamage:(int32_t) value;
- (PP_Pet_Builder*) clearMagicDamage;

- (BOOL) hasMagicDefense;
- (int32_t) magicDefense;
- (PP_Pet_Builder*) setMagicDefense:(int32_t) value;
- (PP_Pet_Builder*) clearMagicDefense;

- (BOOL) hasTid;
- (int32_t) tid;
- (PP_Pet_Builder*) setTid:(int32_t) value;
- (PP_Pet_Builder*) clearTid;
@end

